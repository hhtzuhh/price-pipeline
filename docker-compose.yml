version: "3.9"

services:
  # ──────────── FastAPI backend ────────────
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ──────────── Postgres ────────────
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
 # ──────────── MA Consumer ────────────
  ma_consumer:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "app.kafka.ma_consumer"]
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    volumes:
      - .:/app

  # ──────────── Kafka (KRaft, no ZooKeeper) ────────────
  kafka:
    image: confluentinc/cp-kafka:7.6.1  # 7.6.x and later support KRaft
    container_name: kafka_kraft
    ports:
      - "9092:9092"          # client traffic
    environment:
      ## KRaft basics
      KAFKA_NODE_ID: 1
      CLUSTER_ID: o7MGJw1yQByM6D5eA1Vy9a   # keep this stable once the log dir is initialised
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      ## Listeners
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      ## Misc
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  kafka_data:

networks:
  default:
    driver: bridge
